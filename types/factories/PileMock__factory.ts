/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PileMock, PileMockInterface } from "../PileMock";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
    ],
    name: "accrue",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "calls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "changeRate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "debt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
    ],
    name: "debt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "decDebt",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ratePerSecond",
        type: "uint256",
      },
    ],
    name: "file",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "incDebt",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pie",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rateDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setFail",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "returnValue",
        type: "bool",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "returnValue",
        type: "address",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "returnValue",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address_return",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bool_return",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_return",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_uint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ba7806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636edfc001116100de578063a98d6f4f11610097578063cff1026511610071578063cff1026514610476578063d7affae314610493578063dd418ae2146104bc578063eb9d76eb1461050c5761018e565b8063a98d6f4f14610405578063ac055e4014610422578063bf3e9d7c146104455761018e565b80636edfc00114610349578063744f4cf61461036e57806386c1762a1461038b5780639717411d146103a8578063a4ed6087146103c5578063a883b0c4146103e25761018e565b80632554f2721161014b5780633655626e116101255780633655626e146102a457806346df2ccb146102dd5780635e2dcc1e1461030057806368a9d29a1461032c5761018e565b80632554f272146102545780632c7730fe1461027f5780632ddbd13a1461029c5761018e565b806301aa8a6e14610193578063071ffb3c146101c25780630dca59c1146101e75780631e0029c8146101ef5780632047a2671461020c57806321e8e12a1461022f575b600080fd5b6101b0600480360360208110156101a957600080fd5b503561053e565b60408051918252519081900360200190f35b6101e5600480360360408110156101d857600080fd5b508035906020013561055b565b005b6101b06105df565b6101b06004803603602081101561020557600080fd5b50356105f6565b6101e56004803603604081101561022257600080fd5b508035906020013561067b565b6101e56004803603604081101561024557600080fd5b508035906020013515156106ff565b6101e56004803603606081101561026a57600080fd5b5080359060208101351515906040013561071f565b6101b06004803603602081101561029557600080fd5b5035610738565b6101b061074a565b6102c1600480360360208110156102ba57600080fd5b5035610780565b604080516001600160a01b039092168252519081900360200190f35b6101e5600480360360408110156102f357600080fd5b508035906020013561079b565b6101e56004803603604081101561031657600080fd5b50803590602001356001600160a01b031661081f565b6102c16004803603602081101561034257600080fd5b503561084d565b6101e56004803603604081101561035f57600080fd5b50803590602001351515610868565b6101e56004803603602081101561038457600080fd5b5035610888565b6101b0600480360360208110156103a157600080fd5b50356108e6565b6101b0600480360360208110156103be57600080fd5b5035610921565b6101b0600480360360208110156103db57600080fd5b5035610932565b6101e5600480360360408110156103f857600080fd5b5080359060200135610944565b6101b06004803603602081101561041b57600080fd5b50356109cb565b6101e56004803603604081101561043857600080fd5b50803590602001356109dd565b6104626004803603602081101561045b57600080fd5b50356109ef565b604080519115158252519081900360200190f35b6101b06004803603602081101561048c57600080fd5b5035610a04565b6101e5600480360360608110156104a957600080fd5b5080359060208101359060400135610a16565b6104d9600480360360208110156104d257600080fd5b5035610a98565b6040805195865260208601949094528484019290925265ffffffffffff1660608401526080830152519081900360a00190f35b6101e56004803603606081101561052257600080fd5b508035906001600160a01b036020820135169060400135610b46565b6000610555686c6f616e526174657360b81b610b50565b92915050565b7fd2fe6cf45fe0a14faec24218a74bf97b2a0a25e8d9f492417dadfe0d24803e61919091557f432bbeababbf0aecfabe744e517ee3245b3eb9f0cd51acc2433cc121ff1631c855661a5b98d119589d60ca1b60009081526020527f6bf549bde4fe9da17df88303b3606db0ef32745377b7744ac81621ada8ff603180546001019055565b60006105f1631919589d60e21b610b50565b905090565b7fd2e96d9f1e8a1869217d8bd9b6c350100aa9243608cf0d873d3ab50db71b125055683232b13a2fb637b0b760b91b6000527fe8e93a9cf671d1044b4c37b4315e76ff8e939140afd712a764eb2f69d69239e8805460019081019091556020527fbe0cb2b9d94124b3c36d01859c7cce64559e9df3e330966e5dbe67f8f59336d05490565b7fa755eb10668bea929ba13f6c4c9fed8173f37fca958c7df5e59792b54587c888919091557f8b992f61caaa1ee7d46f9b2d64ed55f952737e533905290e35d2faea87383ee85566191958d119589d60ca1b60009081526020527f810ce3795cfc4ac745c0d0a895e154ff14291f03a7434e6e5954b059611a96a280546001019055565b600091825260036020526040909120805460ff1916911515919091179055565b61072983836106ff565b61073383826109dd565b505050565b60046020526000908152604090205481565b641d1bdd185b60da1b60005260016020527f4bda917190976a00e86372f7dc3876a773c44eefe633afc6c185b7c877664a615490565b6005602052600090815260409020546001600160a01b031681565b7f7708521ec9da8a850ad6b226a4b190316bbee0c2000a21f84038dd120e044d97919091557f76ca29977275ba899a34f27780fa7283d32eb16b8335d190b9f3ac8c658a229a55667365745261746560c81b60009081526020527f3b52b55d052ebcdd5f76a44dfde4235c6329f820de09cdbb4dc889b9b705562480546001019055565b60009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6002602052600090815260409020546001600160a01b031681565b600091825260076020526040909120805460ff1916911515919091179055565b7f800cfb5d73d67ddcd068c405b68092e5f6108745fd903d5452e4aa3d550c1db3556561636372756560d01b60009081526020527f18f56092e6101fac4774818b7bfe69374b4457ea41a2c015b2ed1c04dcf5a2fb80546001019055565b50681c985d1957d919589d60ba1b60005260016020527f31519c3ab130086ceaca78f9d25de6aa717674203c24109d3badca81a163d1565490565b60006105556270696560e81b610b50565b60016020526000908152604090205481565b7f65178158c919a73c7816c48b8221cba3969b824a19a22b9459497bc4420b37b6919091557fff8abd66b0db59e5c452d7514293141d3c1daceebf176f472a68c200d067b13e55696368616e67655261746560b01b60009081526020527fe605b6aad73d193406a2d10ee3dc1b452d744cf1633f59bfe087d90089274d6580546001019055565b60066020526000908152604090205481565b60009182526001602052604090912055565b60036020526000908152604090205460ff1681565b60006020819052908152604090205481565b7f73fd10150820201570f92ebea11f58ac58bfac56b54b7e17b0aabf72aaaab3c0919091557f76f951ebf18302dfb0d6e23fe0396b0abcfee8e701ac251e1f082c1cc1bc02e955506366696c6560e01b60009081526020527f0d92b3f9f6dfbc9e49050cf2af4db239b8606b6dabd9aea510609899bebbc68980546001019055565b60016020527f93fb08df901dd997abfe1656ece451661e7a40b21a9ca9a9bdd53b9132aef7d5547fcf7c3cc0bae4018f914c49bba1fb531e38c174bdcbbb4a1b04bcce5f62a4d885547fb55f76bc5b7d6dec68066f77e46fb2dfd93e3ab9f40afeb15ccfb385c560c633546e72617465735f66697865645261746560881b60009081527f68af65f0fe89a788e6471739476dca0d19cab0a5b4941a3122f0bb38bd217f765491939590929450565b610729838361081f565b600090815260208181526040808320805460019081019091559091529020549056fea265627a7a72315820e72d2414f8e1a437fd09c728424ed46f6a40ab203af6260527758e5cb9c3a92a64736f6c634300050f0032";

export class PileMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PileMock> {
    return super.deploy(overrides || {}) as Promise<PileMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PileMock {
    return super.attach(address) as PileMock;
  }
  connect(signer: Signer): PileMock__factory {
    return super.connect(signer) as PileMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PileMockInterface {
    return new utils.Interface(_abi) as PileMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PileMock {
    return new Contract(address, _abi, signerOrProvider) as PileMock;
  }
}
