/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "pull",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805460ff191660121790553480156200001e57600080fd5b50604051620013b8380380620013b8833981810160405260408110156200004457600080fd5b81019080805160405193929190846401000000008211156200006557600080fd5b9083019060208201858111156200007b57600080fd5b82516401000000008111828201881017156200009657600080fd5b82525081516020918201929091019080838360005b83811015620000c5578181015183820152602001620000ab565b50505050905090810190601f168015620000f35780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011757600080fd5b9083019060208201858111156200012d57600080fd5b82516401000000008111828201881017156200014857600080fd5b82525081516020918201929091019080838360005b83811015620001775781810151838201526020016200015d565b50505050905090810190601f168015620001a55780820380516001836020036101000a031916815260200191505b5060409081523360009081526020818152919020600190558551620001d49450600393509086019150620002f1565b508051620001ea906002906020840190620002f1565b5060405146908060526200136682396052019050604051809103902060026040518082805460018160011615610100020316600290048015620002675780601f106200024457610100808354040283529182019162000267565b820191906000526020600020905b81548152906001019060200180831162000252575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c09094019094525050805191012060065550620003969050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033457805160ff191683800117855562000364565b8280016001018555821562000364579182015b828111156200036457825182559160200191906001019062000347565b506200037292915062000376565b5090565b6200039391905b808211156200037257600081556001016200037d565b90565b610fc080620003a66000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063b753a98c1161007c578063b753a98c146103b0578063bb35783b146103dc578063bf353dbb14610412578063d505accf14610438578063dd62ed3e14610489578063f2d5d56b146104b757610142565b80637ecebe001461030457806395d89b411461032a5780639c52a7f1146103325780639dc29fac14610358578063a9059cbb1461038457610142565b8063313ce5671161010a578063313ce5671461025c5780633644e5151461027a57806340c10f191461028257806354fd4d50146102b057806365fae35e146102b857806370a08231146102de57610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd1461020457806323b872dd1461021e57806330adf81f14610254575b600080fd5b61014f6104e3565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b03813516906020013561056e565b604080519115158252519081900360200190f35b61020c6105d5565b60408051918252519081900360200190f35b6101f06004803603606081101561023457600080fd5b506001600160a01b038135811691602081013590911690604001356105db565b61020c610805565b610264610829565b6040805160ff9092168252519081900360200190f35b61020c610832565b6102ae6004803603604081101561029857600080fd5b506001600160a01b038135169060200135610838565b005b61014f6108e5565b6102ae600480360360208110156102ce57600080fd5b50356001600160a01b0316610940565b61020c600480360360208110156102f457600080fd5b50356001600160a01b0316610979565b61020c6004803603602081101561031a57600080fd5b50356001600160a01b031661098b565b61014f61099d565b6102ae6004803603602081101561034857600080fd5b50356001600160a01b03166109f8565b6102ae6004803603604081101561036e57600080fd5b506001600160a01b038135169060200135610a2e565b6101f06004803603604081101561039a57600080fd5b506001600160a01b038135169060200135610c36565b6102ae600480360360408110156103c657600080fd5b506001600160a01b038135169060200135610c4a565b6102ae600480360360608110156103f257600080fd5b506001600160a01b03813581169160208101359091169060400135610c5a565b61020c6004803603602081101561042857600080fd5b50356001600160a01b0316610c6b565b6102ae600480360360e081101561044e57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610c7d565b61020c6004803603604081101561049f57600080fd5b506001600160a01b0381358116916020013516610eca565b6102ae600480360360408110156104cd57600080fd5b506001600160a01b038135169060200135610ee7565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b505050505081565b3360008181526009602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60055481565b6001600160a01b038316600090815260086020526040812054821115610644576040805162461bcd60e51b815260206004820152601960248201527863656e742f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b038416331480159061068257506001600160a01b038416600090815260096020908152604080832033845290915290205460001914155b15610752576001600160a01b03841660009081526009602090815260408083203384529091529020548211156106ff576040805162461bcd60e51b815260206004820152601b60248201527f63656e742f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b6001600160a01b038416600090815260096020908152604080832033845290915290205461072d9083610ef2565b6001600160a01b03851660009081526009602090815260408083203384529091529020555b6001600160a01b0384166000908152600860205260409020546107759083610ef2565b6001600160a01b0380861660009081526008602052604080822093909355908516815220546107a49083610f3f565b6001600160a01b0380851660008181526008602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60015460ff1681565b60065481565b3360009081526020819052604090205460011461085457600080fd5b6001600160a01b0382166000908152600860205260409020546108779082610f3f565b6001600160a01b03831660009081526008602052604090205560055461089d9082610f3f565b6005556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105665780601f1061053b57610100808354040283529160200191610566565b3360009081526020819052604090205460011461095c57600080fd5b6001600160a01b0316600090815260208190526040902060019055565b60086020526000908152604090205481565b60076020526000908152604090205481565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105665780601f1061053b57610100808354040283529160200191610566565b33600090815260208190526040902054600114610a1457600080fd5b6001600160a01b0316600090815260208190526040812055565b6001600160a01b038216600090815260086020526040902054811115610a97576040805162461bcd60e51b815260206004820152601960248201527863656e742f696e73756666696369656e742d62616c616e636560381b604482015290519081900360640190fd5b6001600160a01b0382163314801590610ad557506001600160a01b038216600090815260096020908152604080832033845290915290205460001914155b15610ba5576001600160a01b0382166000908152600960209081526040808320338452909152902054811115610b52576040805162461bcd60e51b815260206004820152601b60248201527f63656e742f696e73756666696369656e742d616c6c6f77616e63650000000000604482015290519081900360640190fd5b6001600160a01b0382166000908152600960209081526040808320338452909152902054610b809082610ef2565b6001600160a01b03831660009081526009602090815260408083203384529091529020555b6001600160a01b038216600090815260086020526040902054610bc89082610ef2565b6001600160a01b038316600090815260086020526040902055600554610bee9082610ef2565b6005556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6000610c433384846105db565b9392505050565b610c553383836105db565b505050565b610c658383836105db565b50505050565b60006020819052908152604090205481565b42841015610cc7576040805162461bcd60e51b815260206004820152601260248201527163656e742f706173742d646561646c696e6560701b604482015290519081900360640190fd5b6006546001600160a01b0380891660008181526007602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610de2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e185750886001600160a01b0316816001600160a01b0316145b610e62576040805162461bcd60e51b815260206004820152601660248201527563656e742d65726332302f696e76616c69642d73696760501b604482015290519081900360640190fd5b6001600160a01b03808a166000818152600960209081526040808320948d16808452948252918290208b905581518b815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050505050505050565b600960209081526000928352604080842090915290825290205481565b610c558233836105db565b808203828111156105cf576040805162461bcd60e51b81526020600482015260126024820152716d6174682d7375622d756e646572666c6f7760701b604482015290519081900360640190fd5b808201828110156105cf576040805162461bcd60e51b81526020600482015260116024820152706d6174682d6164642d6f766572666c6f7760781b604482015290519081900360640190fdfea265627a7a7231582064f0ceced3b7dcf3b555c3c15a22cb6d588bc44ae8ea0092eda5018afe3e61fe64736f6c634300050f0032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429";

export class ERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    symbol_: string,
    name_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(symbol_, name_, overrides || {}) as Promise<ERC20>;
  }
  getDeployTransaction(
    symbol_: string,
    name_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(symbol_, name_, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
