/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenMock, TokenMockInterface } from "../TokenMock";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "calls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setFail",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "returnValue",
        type: "bool",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "returnValue",
        type: "address",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "returnValue",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address_return",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bool_return",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_return",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_uint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636edfc001116100a2578063a98d6f4f11610071578063a98d6f4f14610354578063ac055e4014610371578063bf3e9d7c14610394578063cff10265146103b1578063eb9d76eb146103ce57610116565b80636edfc001146102c057806370a08231146102e55780639dc29fac1461030b578063a4ed60871461033757610116565b80632c7730fe116100e95780632c7730fe146101e35780633655626e1461021257806340c10f191461024b5780635e2dcc1e1461027757806368a9d29a146102a357610116565b8063095ea7b31461011b57806321e8e12a1461015b57806323b872dd146101825780632554f272146101b8575b600080fd5b6101476004803603604081101561013157600080fd5b506001600160a01b038135169060200135610400565b604080519115158252519081900360200190f35b6101806004803603604081101561017157600080fd5b508035906020013515156104c4565b005b6101476004803603606081101561019857600080fd5b506001600160a01b038135811691602081013590911690604001356104e4565b610180600480360360608110156101ce57600080fd5b508035906020810135151590604001356105c4565b610200600480360360208110156101f957600080fd5b50356105dd565b60408051918252519081900360200190f35b61022f6004803603602081101561022857600080fd5b50356105ef565b604080516001600160a01b039092168252519081900360200190f35b6101806004803603604081101561026157600080fd5b506001600160a01b03813516906020013561060a565b6101806004803603604081101561028d57600080fd5b50803590602001356001600160a01b03166106ad565b61022f600480360360208110156102b957600080fd5b50356106db565b610180600480360360408110156102d657600080fd5b508035906020013515156106f6565b610200600480360360208110156102fb57600080fd5b50356001600160a01b0316610716565b6101806004803603604081101561032157600080fd5b506001600160a01b038135169060200135610786565b6102006004803603602081101561034d57600080fd5b5035610829565b6102006004803603602081101561036a57600080fd5b503561083b565b6101806004803603604081101561038757600080fd5b508035906020013561084d565b610147600480360360208110156103aa57600080fd5b503561085f565b610200600480360360208110156103c757600080fd5b5035610874565b610180600480360360608110156103e457600080fd5b508035906001600160a01b036020820135169060400135610886565b7e2152c209600ce959bcf55a330a3d3fa0ddca50a7707e958af1812efc5426ed805460010190557f09f3bd67dc32f59c73a7f4bbbf5df71b0599dd60addacb2b8de23d4f0118898480546001600160a01b0319166001600160a01b0393909316929092179091557f300e76da5ae4102ba7eaef443ee95bb62fb065396fbce3b8ef8e08b6b3197fbc5566617070726f766560c81b60005260036020527f026c58df29635867a0e476684eb682df707baa1999af34e03dd5bbc62a3ebeeb5460ff1690565b600091825260036020526040909120805460ff1916911515919091179055565b7f365a2cd01d940bea97d8ffe597bccfaf65e5e78aad794785bb274ae9208b0c6b805460019081019091557fb888cdf24d6a300b2f1c2a7748e90d1e873dd531bf12e796a1f7af9301e4fb9a80546001600160a01b039586166001600160a01b0319918216179091557fcf576f8aa8ded0289f2051af9388ee29297add86da0e11c63655d3b5ea3e479d805494909516931692909217909255721d1c985b9cd9995c919c9bdb57d85b5bdd5b9d606a1b60005260046020527fe684b6c97d655f785e2b3aafe1299947d2994df1c237782e062cfcf3662da72f9190915590565b6105ce83836104c4565b6105d8838261084d565b505050565b60046020526000908152604090205481565b6005602052600090815260409020546001600160a01b031681565b7fbd1498b0b9d17f3bbbe0a0b00e2fdfc0df6c8f4cd37d0b8f86af9757ea6173a3805460010190557fecbd3a28cef9269185cb76208b6fadecef8212c2666e3fe4e38e09cce6e611aa80546001600160a01b0319166001600160a01b0393909316929092179091556a1b5a5b9d17d85b5bdd5b9d60aa1b60005260046020527f5fd07a9008da69cf6d776cea8fb07d00d05e49acaa4e675baf4b51d39a8a467d55565b60009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6002602052600090815260409020546001600160a01b031681565b600091825260076020526040909120805460ff1916911515919091179055565b6c3130b630b731b2a7b32fbab9b960991b600090815260056020527f78655abea5deaebee3bd2df48447f89e221b6695ee6e6f28af95f8d1605dadb880546001600160a01b0319166001600160a01b038416179055610780683130b630b731b2a7b360b91b610890565b92915050565b7faf0c6534ce34b91c2d5c27e55f8b62452c42e68bcbe337120f5033be36c1a3b6805460010190557f56e2c0fa5f355157967a912f1797b9d2d100bc8228076c4267a1010d483ed52580546001600160a01b0319166001600160a01b0393909316929092179091556a189d5c9b97d85b5bdd5b9d60aa1b60005260046020527fea86279ea1fe2c907462187b38c32adeb4b29cdc5d3cc22b8778f0efc25455d355565b60016020526000908152604090205481565b60066020526000908152604090205481565b60009182526001602052604090912055565b60036020526000908152604090205460ff1681565b60006020819052908152604090205481565b6105ce83836106ad565b600090815260208181526040808320805460019081019091559091529020549056fea265627a7a723158202a6b4317c9be9cb4d0eba00a31c12a44fc6cb64f34bbab8f9020d122c323beaa64736f6c634300050f0032";

export class TokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMock> {
    return super.deploy(overrides || {}) as Promise<TokenMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenMock {
    return super.attach(address) as TokenMock;
  }
  connect(signer: Signer): TokenMock__factory {
    return super.connect(signer) as TokenMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMockInterface {
    return new utils.Interface(_abi) as TokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMock {
    return new Contract(address, _abi, signerOrProvider) as TokenMock;
  }
}
