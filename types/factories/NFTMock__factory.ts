/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTMock, NFTMockInterface } from "../NFTMock";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "calls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setFail",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "returnValue",
        type: "bool",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "returnValue",
        type: "address",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "returnValue",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address_return",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bool_return",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_return",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_uint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610742806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806368a9d29a116100a2578063ac055e4011610071578063ac055e4014610319578063b9c362091461033c578063bf3e9d7c1461035f578063cff1026514610390578063eb9d76eb146103ad57610116565b806368a9d29a1461029d5780636edfc001146102ba578063a4ed6087146102df578063a98d6f4f146102fc57610116565b806331eb7a1a116100e957806331eb7a1a146101d25780633655626e146101ef57806340c10f19146102285780635e2dcc1e146102545780636352211e1461028057610116565b806321e8e12a1461011b57806323b872dd146101425780632554f272146101785780632c7730fe146101a3575b600080fd5b6101406004803603604081101561013157600080fd5b508035906020013515156103df565b005b6101406004803603606081101561015857600080fd5b506001600160a01b038135811691602081013590911690604001356103ff565b6101406004803603606081101561018e57600080fd5b50803590602081013515159060400135610504565b6101c0600480360360208110156101b957600080fd5b503561051d565b60408051918252519081900360200190f35b6101c0600480360360208110156101e857600080fd5b503561052f565b61020c6004803603602081101561020557600080fd5b5035610536565b604080516001600160a01b039092168252519081900360200190f35b6101406004803603604081101561023e57600080fd5b506001600160a01b038135169060200135610551565b6101406004803603604081101561026a57600080fd5b50803590602001356001600160a01b03166105f5565b61020c6004803603602081101561029657600080fd5b5035610623565b61020c600480360360208110156102b357600080fd5b5035610665565b610140600480360360408110156102d057600080fd5b50803590602001351515610680565b6101c0600480360360208110156102f557600080fd5b50356106a0565b6101c06004803603602081101561031257600080fd5b50356106b2565b6101406004803603604081101561032f57600080fd5b50803590602001356106c4565b6101406004803603604081101561035257600080fd5b50803590602001356106d6565b61037c6004803603602081101561037557600080fd5b50356106dc565b604080519115158252519081900360200190f35b6101c0600480360360208110156103a657600080fd5b50356106f1565b610140600480360360608110156103c357600080fd5b508035906001600160a01b036020820135169060400135610703565b600091825260036020526040909120805460ff1916911515919091179055565b7f365a2cd01d940bea97d8ffe597bccfaf65e5e78aad794785bb274ae9208b0c6b805460010190557fb888cdf24d6a300b2f1c2a7748e90d1e873dd531bf12e796a1f7af9301e4fb9a80546001600160a01b039485166001600160a01b0319918216179091557fcf576f8aa8ded0289f2051af9388ee29297add86da0e11c63655d3b5ea3e479d80549390941692811683179093557fb74d03988cc355c54f36217c64b5d14c6239847e90aa230f331f28da0f7e2cfc8054909316909117909155731d1c985b9cd9995c919c9bdb57dd1bdad95b925960621b60005260046020527f745d8dfffea3e4a73ef4b55f4cac4f53b79322ac88f1b7a70c6ac80eb314721f55565b61050e83836103df565b61051883826106c4565b505050565b60046020526000908152604090205481565b5060085490565b6005602052600090815260409020546001600160a01b031681565b7fbd1498b0b9d17f3bbbe0a0b00e2fdfc0df6c8f4cd37d0b8f86af9757ea6173a3805460010190557fc0c3866bc41814ca0f28f3b9e42e12cd3c2bf8d0277e9512b88f5c702b6aae1480546001600160a01b0319166001600160a01b0393909316929092179091556b1b5a5b9d17dd1bdad95b925960a21b60005260046020527f4527213390b133164845be6b751ed4d9c9db40be4a038ddbb73671a04540bcec55565b60009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b506637bbb732b927b360c91b60005260026020527fb74d03988cc355c54f36217c64b5d14c6239847e90aa230f331f28da0f7e2cfc546001600160a01b031690565b6002602052600090815260409020546001600160a01b031681565b600091825260076020526040909120805460ff1916911515919091179055565b60016020526000908152604090205481565b60066020526000908152604090205481565b60009182526001602052604090912055565b60085550565b60036020526000908152604090205460ff1681565b60006020819052908152604090205481565b61050e83836105f556fea265627a7a723158208531b3e3f4d53d51f7e77394702b6cfc0671da2b8ea627609777ba25902076f764736f6c634300050f0032";

export class NFTMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMock> {
    return super.deploy(overrides || {}) as Promise<NFTMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMock {
    return super.attach(address) as NFTMock;
  }
  connect(signer: Signer): NFTMock__factory {
    return super.connect(signer) as NFTMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMockInterface {
    return new utils.Interface(_abi) as NFTMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMock {
    return new Contract(address, _abi, signerOrProvider) as NFTMock;
  }
}
