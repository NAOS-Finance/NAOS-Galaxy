/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BucketTest, BucketTestInterface } from "../BucketTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exact",
        type: "bool",
      },
    ],
    name: "eventListener",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "addBuckets",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "rdiv",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "rmul",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "setUp",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "testAddBuckets",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "testRemoveAllBuckets",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "testRemoveFirstBucket",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "testRemoveLastBucket",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "testRemoveMiddleBucket",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff19166001179055611b66806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806375d7cc7111610097578063d05c78da11610066578063d05c78da146101e6578063d27002d814610209578063e6cb901314610211578063fa7626d414610234576100f5565b806375d7cc711461017c578063a293d1e814610184578063b5931f7c146101a7578063ba414fa6146101ca576100f5565b80632799fc9a116100d35780632799fc9a146101415780635e9c938a1461014957806367457022146101515780637189654614610174576100f5565b80630a9254e4146100fa5780630e2286d3146101045780631dfccb1714610139575b600080fd5b61010261023c565b005b6101276004803603604081101561011a57600080fd5b5080359060200135610287565b60408051918252519081900360200190f35b610102610302565b6101026105b6565b61010261073a565b6101276004803603604081101561016757600080fd5b5080359060200135610c63565b610102610c7c565b6101026110f2565b6101276004803603604081101561019a57600080fd5b50803590602001356110fa565b610127600480360360408110156101bd57600080fd5b508035906020013561114a565b6101d2611155565b604080519115158252519081900360200190f35b610127600480360360408110156101fc57600080fd5b5080359060200135611163565b6101026111c1565b6101276004803603604081101561022757600080fd5b508035906020013561130f565b6101d2611359565b60405161024890611469565b604051809103906000f080158015610264573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008082116102d0576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b816102f36102ea856b033b2e3c9fd0803ce8000000611163565b6002850461130f565b816102fa57fe5b049392505050565b61030a61073a565b60015460408051634cc8221560e01b8152620697804201600482015290516001600160a01b0390921691634cc822159160248082019260009290919082900301818387803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b505050506103ff600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c457600080fd5b505afa1580156103d8573d6000803e3d6000fd5b505050506040513d60208110156103ee57600080fd5b5051680ad78ebc5ac6200000611362565b60015460408051632fae4e1760e21b815290516104f2926001600160a01b03169163beb9385c916004808301926020929190829003018186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b505160015460408051630cfa454760e21b81526203f4804201600482015290516001600160a01b03909216916333e9151c91602480820192602092909190829003018186803b1580156104c157600080fd5b505afa1580156104d5573d6000803e3d6000fd5b505050506040513d60208110156104eb57600080fd5b5051611362565b600154604080516314ac131d60e11b815290516105b4926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561053857600080fd5b505afa15801561054c573d6000803e3d6000fd5b505050506040513d602081101561056257600080fd5b505160015460408051630cfa454760e21b8152620d2f004201600482015290516001600160a01b03909216916333e9151c91602480820192602092909190829003018186803b1580156104c157600080fd5b565b6105be61073a565b60015460408051634cc8221560e01b81526203f4804201600482015290516001600160a01b0390921691634cc822159160248082019260009290919082900301818387803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b50505050610678600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c457600080fd5b60015460408051632fae4e1760e21b815290516104f2926001600160a01b03169163beb9385c916004808301926020929190829003018186803b1580156106be57600080fd5b505afa1580156106d2573d6000803e3d6000fd5b505050506040513d60208110156106e857600080fd5b505160015460408051630cfa454760e21b8152620697804201600482015290516001600160a01b03909216916333e9151c91602480820192602092909190829003018186803b1580156104c157600080fd5b60015460408051632fae4e1760e21b815290516107b3926001600160a01b03169163beb9385c916004808301926020929190829003018186803b15801561078057600080fd5b505afa158015610794573d6000803e3d6000fd5b505050506040513d60208110156107aa57600080fd5b50516000611362565b600154604080516314ac131d60e11b815290516107f9926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561078057600080fd5b6001546040805163771602f760e01b8152620697804201600482015268056bc75e2d6310000060248201819052915191926001600160a01b03169163771602f79160448082019260009290919082900301818387803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b505050506108ff600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d60208110156108ee57600080fd5b505168056bc75e2d63100000611362565b60015460408051632fae4e1760e21b81529051610945926001600160a01b03169163beb9385c916004808301926020929190829003018186803b1580156106be57600080fd5b600154604080516314ac131d60e11b8152905161098b926001600160a01b031691632958263a916004808301926020929190829003018186803b1580156106be57600080fd5b6001546040805163771602f760e01b8152620d2f00420160048201526024810184905290516001600160a01b039092169163771602f79160448082019260009290919082900301818387803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b50505050610a4c600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c457600080fd5b60015460408051632fae4e1760e21b81529051610a92926001600160a01b03169163beb9385c916004808301926020929190829003018186803b1580156106be57600080fd5b600154604080516314ac131d60e11b81529051610ad8926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561053857600080fd5b6001546040805163771602f760e01b81526203f480420160048201526024810184905290516001600160a01b039092169163771602f79160448082019260009290919082900301818387803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b50505050610bd4600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b9957600080fd5b505afa158015610bad573d6000803e3d6000fd5b505050506040513d6020811015610bc357600080fd5b5051681043561a8829300000611362565b60015460408051632fae4e1760e21b81529051610c1a926001600160a01b03169163beb9385c916004808301926020929190829003018186803b15801561044557600080fd5b600154604080516314ac131d60e11b81529051610c60926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561053857600080fd5b50565b60006b033b2e3c9fd0803ce80000006102f38484611163565b610c8461073a565b60015460408051634cc8221560e01b8152620697804201600482015290516001600160a01b0390921691634cc822159160248082019260009290919082900301818387803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b505060015460408051634cc8221560e01b8152620d2f004201600482015290516001600160a01b039092169350634cc82215925060248082019260009290919082900301818387803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b50505050610da7600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c457600080fd5b60015460408051632fae4e1760e21b81529051610ded926001600160a01b03169163beb9385c916004808301926020929190829003018186803b15801561044557600080fd5b600154604080516314ac131d60e11b81529051610e33926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561044557600080fd5b60015460408051634cc8221560e01b81526203f4804201600482015290516001600160a01b0390921691634cc822159160248082019260009290919082900301818387803b158015610e8457600080fd5b505af1158015610e98573d6000803e3d6000fd5b50505050610eed600160009054906101000a90046001600160a01b03166001600160a01b031663beb9385c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561078057600080fd5b600154604080516314ac131d60e11b81529051610f33926001600160a01b031691632958263a916004808301926020929190829003018186803b15801561078057600080fd5b60015460408051639f33e68f60e01b81529051610f79926001600160a01b031691639f33e68f916004808301926020929190829003018186803b15801561078057600080fd5b6001546040805163771602f760e01b8152621baf80420160048201526729a2241af62c0000602482015290516001600160a01b039092169163771602f79160448082019260009290919082900301818387803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b50506001546040805163771602f760e01b8152621fa400420160048201526729a2241af62c0000602482015290516001600160a01b03909216935063771602f7925060448082019260009290919082900301818387803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b505050506105b4600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110b857600080fd5b505afa1580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b50516753444835ec580000611362565b6105b461073a565b80820382811115611144576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5cdd588b59985a5b1959608a1b604482015290519081900360640190fd5b92915050565b60008183816102fa57fe5b600054610100900460ff1681565b600081158061117e5750508082028282828161117b57fe5b04145b611144576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5b5d5b0b59985a5b1959608a1b604482015290519081900360640190fd5b6111c961073a565b60015460408051634cc8221560e01b8152620d2f004201600482015290516001600160a01b0390921691634cc822159160248082019260009290919082900301818387803b15801561121a57600080fd5b505af115801561122e573d6000803e3d6000fd5b50505050611283600160009054906101000a90046001600160a01b03166001600160a01b0316639f33e68f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c457600080fd5b60015460408051632fae4e1760e21b815290516112c9926001600160a01b03169163beb9385c916004808301926020929190829003018186803b15801561044557600080fd5b600154604080516314ac131d60e11b815290516105b4926001600160a01b031691632958263a916004808301926020929190829003018186803b1580156106be57600080fd5b80820182811015611144576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5859190b59985a5b1959608a1b604482015290519081900360640190fd5b60005460ff1681565b80821461145457604080517f4572726f723a2057726f6e67206075696e74272076616c756500000000000000815290517fe81699b85113eea1c73e10588b2b035e55893369632173afd43feb192fac64e39181900360200190a160408051690808115e1c1958dd195960b21b81526020810183905281517ff10e10fc613faff13ec2fbf0480c452e8ba6ea153d935c216544c8e9c6aa5bd7929181900390910190a16040805169080808081058dd1d585b60b21b81526020810184905281517ff10e10fc613faff13ec2fbf0480c452e8ba6ea153d935c216544c8e9c6aa5bd7929181900390910190a1611454611458565b5050565b6000805461ff001916610100179055565b6106bb806114778339019056fe60806040526106a8806100136000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639b51fb0d1161008c578063b5931f7c11610066578063b5931f7c14610217578063beb9385c1461023a578063d05c78da14610242578063e6cb901314610265576100ea565b80639b51fb0d146101b65780639f33e68f146101ec578063a293d1e8146101f4576100ea565b80634cc82215116100c85780634cc82215146101495780636745702214610168578063771602f71461018b5780637b51ee50146101ae576100ea565b80630e2286d3146100ef5780632958263a1461012457806333e9151c1461012c575b600080fd5b6101126004803603604081101561010557600080fd5b5080359060200135610288565b60408051918252519081900360200190f35b610112610303565b6101126004803603602081101561014257600080fd5b5035610309565b6101666004803603602081101561015f57600080fd5b5035610315565b005b6101126004803603604081101561017e57600080fd5b5080359060200135610329565b610166600480360360408110156101a157600080fd5b5080359060200135610342565b610112610358565b6101d3600480360360208110156101cc57600080fd5b503561035d565b6040805192835260208301919091528051918290030190f35b610112610376565b6101126004803603604081101561020a57600080fd5b50803590602001356103d1565b6101126004803603604081101561022d57600080fd5b5080359060200135610421565b61011261042c565b6101126004803603604081101561025857600080fd5b5080359060200135610432565b6101126004803603604081101561027b57600080fd5b5080359060200135610490565b60008082116102d1576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b816102f46102eb856b033b2e3c9fd0803ce8000000610432565b60028504610490565b816102fb57fe5b049392505050565b60025481565b62015180908190040290565b61032661032182610309565b6104da565b50565b60006b033b2e3c9fd0803ce80000006102f48484610432565b61035461034e83610309565b82610506565b5050565b600181565b6000602081905290815260409020805460019091015482565b600154600090818161038d576000925050506103ce565b600182146103ca576000828152602081905260409020546103af908290610490565b6000928352602083905260409092206001015491905061038d565b9150505b90565b8082038281111561041b576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5cdd588b59985a5b1959608a1b604482015290519081900360640190fd5b92915050565b60008183816102fb57fe5b60015481565b600081158061044d5750508082028282828161044a57fe5b04145b61041b576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5b5d5b0b59985a5b1959608a1b604482015290519081900360640190fd5b8082018281101561041b576040805162461bcd60e51b815260206004820152600f60248201526e1cd859994b5859190b59985a5b1959608a1b604482015290519081900360640190fd5b6000818152602081905260408120556104f2816105d6565b600090815260208190526040812060010155565b600082815260208190526040902081905560015461053f5760018281556000838152602081905260409020810181905554600255610354565b60015482101561056657600180546000848152602081905260409020820155829055610354565b815b600081815260208190526040902060010154610589576201517f1901610568565b600081815260208190526040902060019081015414156105a95760028390555b60008181526020819052604080822060019081018054878552928420909101919091559190528290555050565b60025460015414156105f15760006002819055600155610326565b600154811461065b576201517f1981015b6000818152602081905260409020600101548214610625576201517f1901610602565b60008281526020819052604080822060019081015484845291909220909101556002548214156106555760028190555b50610326565b6000908152602081905260409020600190810154905556fea265627a7a72315820ff3b4d6fe5b4a38853659c5a4cda1f55524dfa668c2d4a13af0e544025531f7a64736f6c634300050f0032a265627a7a72315820d0555c5449da7059ae0335042bc7cc1b9fb7912032303e6670095acedb82ba0664736f6c634300050f0032";

export class BucketTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BucketTest> {
    return super.deploy(overrides || {}) as Promise<BucketTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BucketTest {
    return super.attach(address) as BucketTest;
  }
  connect(signer: Signer): BucketTest__factory {
    return super.connect(signer) as BucketTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BucketTestInterface {
    return new utils.Interface(_abi) as BucketTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BucketTest {
    return new Contract(address, _abi, signerOrProvider) as BucketTest;
  }
}
