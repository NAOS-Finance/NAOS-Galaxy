/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TitleMock, TitleMockInterface } from "../TitleMock";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "calls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
    ],
    name: "close",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setFail",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "returnValue",
        type: "bool",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "returnValue",
        type: "address",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "returnValue",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setReturn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_address_return",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bool_return",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_bytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_return",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "values_uint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610647806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636edfc00111610097578063ac055e4011610066578063ac055e40146102c7578063bf3e9d7c146102ea578063cff102651461031b578063eb9d76eb1461033857610100565b80636edfc0011461024257806371e928af14610267578063a4ed60871461028d578063a98d6f4f146102aa57610100565b80633655626e116100d35780633655626e146101a35780635e2dcc1e146101dc5780636352211e1461020857806368a9d29a1461022557610100565b80630aebeb4e1461010557806321e8e12a146101245780632554f272146101495780632c7730fe14610174575b600080fd5b6101226004803603602081101561011b57600080fd5b503561036a565b005b6101226004803603604081101561013a57600080fd5b508035906020013515156103c7565b6101226004803603606081101561015f57600080fd5b508035906020810135151590604001356103e7565b6101916004803603602081101561018a57600080fd5b5035610400565b60408051918252519081900360200190f35b6101c0600480360360208110156101b957600080fd5b5035610412565b604080516001600160a01b039092168252519081900360200190f35b610122600480360360408110156101f257600080fd5b50803590602001356001600160a01b031661042d565b6101c06004803603602081101561021e57600080fd5b503561045b565b6101c06004803603602081101561023b57600080fd5b50356104e6565b6101226004803603604081101561025857600080fd5b50803590602001351515610501565b6101916004803603602081101561027d57600080fd5b50356001600160a01b0316610521565b610191600480360360208110156102a357600080fd5b5035610589565b610191600480360360208110156102c057600080fd5b503561059b565b610122600480360360408110156102dd57600080fd5b50803590602001356105ad565b6103076004803603602081101561030057600080fd5b50356105bf565b604080519115158252519081900360200190f35b6101916004803603602081101561033157600080fd5b50356105d4565b6101226004803603606081101561034e57600080fd5b508035906001600160a01b0360208201351690604001356105e6565b7fa50aeee97085743fa67affa8423d314432d8155e2ae04e78326c062750570be85564636c6f736560d81b60009081526020527f4a1eae19517893ba4c929021db1a26f290c1f23bd477ed65c6b3c2b6f3c1678c80546001019055565b600091825260036020526040909120805460ff1916911515919091179055565b6103f183836103c7565b6103fb83826105ad565b505050565b60046020526000908152604090205481565b6005602052600090815260409020546001600160a01b031681565b60009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b7f7f7a85598eef4f80d8ddc6aac7177f9d4b700a3c903bd8eb4e67ffed23b97d73556637bbb732b927b360c91b6000527f344ec3ac9f0b415e738ff03737f79e231afbe8f4d4a8430beeed14f9127fd8288054600101905560026020527fb74d03988cc355c54f36217c64b5d14c6239847e90aa230f331f28da0f7e2cfc546001600160a01b031690565b6002602052600090815260409020546001600160a01b031681565b600091825260076020526040909120805460ff1916911515919091179055565b6834b9b9bab2afbab9b960b91b600090815260056020527fdf306056923615e14e1498e75b43aad86c96954796c37246efa19b0f114293a180546001600160a01b0319166001600160a01b03841617905561058364697373756560d81b6105f0565b92915050565b60016020526000908152604090205481565b60066020526000908152604090205481565b60009182526001602052604090912055565b60036020526000908152604090205460ff1681565b60006020819052908152604090205481565b6103f1838361042d565b600090815260208181526040808320805460019081019091559091529020549056fea265627a7a72315820d858057b81e21e7a44de5e4cddd46c7213b357f46d9ec9dfca8cb5671c1124c164736f6c634300050f0032";

export class TitleMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TitleMock> {
    return super.deploy(overrides || {}) as Promise<TitleMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TitleMock {
    return super.attach(address) as TitleMock;
  }
  connect(signer: Signer): TitleMock__factory {
    return super.connect(signer) as TitleMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TitleMockInterface {
    return new utils.Interface(_abi) as TitleMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TitleMock {
    return new Contract(address, _abi, signerOrProvider) as TitleMock;
  }
}
