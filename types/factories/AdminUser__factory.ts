/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AdminUser, AdminUserInterface } from "../AdminUser";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "shelf_",
        type: "address",
      },
      {
        internalType: "address",
        name: "pile_",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftFeed_",
        type: "address",
      },
      {
        internalType: "address",
        name: "title_",
        type: "address",
      },
      {
        internalType: "address",
        name: "distributor_",
        type: "address",
      },
      {
        internalType: "address",
        name: "collector_",
        type: "address",
      },
      {
        internalType: "address",
        name: "juniorMemberlist_",
        type: "address",
      },
      {
        internalType: "address",
        name: "seniorMemberlist_",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "addKeeper",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "collect",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "rateGroup",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "fileFixedRate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "validitUntil",
        type: "uint256",
      },
    ],
    name: "makeJuniorTokenMember",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "validitUntil",
        type: "uint256",
      },
    ],
    name: "makeSeniorTokenMember",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "lookupId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nftPrice",
        type: "uint256",
      },
    ],
    name: "priceNFT",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "lookupId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nftPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskGroup",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maturityDate",
        type: "uint256",
      },
    ],
    name: "priceNFTAndSetRiskGroup",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "loan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setCollectPrice",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "whitelistKeeper",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610763380380610763833981810160405261010081101561003457600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e090970151600080546001600160a01b03199081166001600160a01b03998a16178255600180548216988a16989098179097556002805488169589169590951790945560038054871693881693909317909255600480548616918716919091179055600580548516938616939093179092556006805484169585169590951790945560078054909216921691909117905561066c9081906100f790396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806376490a4f1161006657806376490a4f146101325780637b6916c3146101615780638d3c100a14610193578063b09e8ba2146101bf578063d5515565146101eb57610093565b806307a4f779146100985780635438b9e5146100bd5780636f5d3861146100e35780636fc3922114610106575b600080fd5b6100bb600480360360408110156100ae57600080fd5b508035906020013561020e565b005b6100bb600480360360208110156100d357600080fd5b50356001600160a01b0316610292565b6100bb600480360360408110156100f957600080fd5b50803590602001356102ff565b6100bb6004803603604081101561011c57600080fd5b506001600160a01b038135169060200135610353565b6100bb6004803603608081101561014857600080fd5b50803590602081013590604081013590606001356103a8565b6100bb6004803603606081101561017757600080fd5b508035906001600160a01b0360208201351690604001356104a2565b6100bb600480360360408110156101a957600080fd5b50803590602001356001600160a01b0316610529565b6100bb600480360360408110156101d557600080fd5b506001600160a01b03813516906020013561057c565b6100bb6004803603604081101561020157600080fd5b50803590602001356105d1565b6004805460408051630d862cfd60e31b8152633637b0b760e11b93810193909352602483018590526000604484018190526064840185905290516001600160a01b0390921692636c3167e8926084808301939282900301818387803b15801561027657600080fd5b505af115801561028a573d6000803e3d6000fd5b505050505050565b6004805460408051639ce49b8560e01b81526001600160a01b038581169482019490945290519290911691639ce49b859160248082019260009290919082900301818387803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b5050505050565b600554604080516352c5dc2560e11b8152600481018590526024810184905290516001600160a01b039092169163a58bb84a9160448082019260009290919082900301818387803b15801561027657600080fd5b6007546040805163066c26f960e31b81526001600160a01b038581166004830152602482018590529151919092169163336137c891604480830192600092919082900301818387803b15801561027657600080fd5b600554604080516317d987a160e01b815260048101879052602481018690526044810185905290516001600160a01b03909216916317d987a19160648082019260009290919082900301818387803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505060055460408051630d05943f60e11b81526b6d617475726974794461746560a01b6004820152602481018990526044810186905290516001600160a01b039092169350631a0b287e925060648082019260009290919082900301818387803b15801561048457600080fd5b505af1158015610498573d6000803e3d6000fd5b5050505050505050565b6004805460408051630d862cfd60e31b8152633637b0b760e11b93810193909352602483018690526001600160a01b038581166044850152606484018590529051911691636c3167e891608480830192600092919082900301818387803b15801561050c57600080fd5b505af1158015610520573d6000803e3d6000fd5b50505050505050565b600480546040805163469e080560e11b81529283018590526001600160a01b0384811660248501529051911691638d3c100a91604480830192600092919082900301818387803b15801561027657600080fd5b6006546040805163066c26f960e31b81526001600160a01b038581166004830152602482018590529151919092169163336137c891604480830192600092919082900301818387803b15801561027657600080fd5b6001546040805163d7affae360e01b81526866697865645261746560b81b6004820152602481018590526044810184905290516001600160a01b039092169163d7affae39160648082019260009290919082900301818387803b15801561027657600080fdfea265627a7a72315820938b5d20c6697b7b7fb1c0ba02bffd028b6f37f15ab3173e8d9ebbbc8670d62064736f6c634300050f0032";

export class AdminUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    shelf_: string,
    pile_: string,
    nftFeed_: string,
    title_: string,
    distributor_: string,
    collector_: string,
    juniorMemberlist_: string,
    seniorMemberlist_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AdminUser> {
    return super.deploy(
      shelf_,
      pile_,
      nftFeed_,
      title_,
      distributor_,
      collector_,
      juniorMemberlist_,
      seniorMemberlist_,
      overrides || {}
    ) as Promise<AdminUser>;
  }
  getDeployTransaction(
    shelf_: string,
    pile_: string,
    nftFeed_: string,
    title_: string,
    distributor_: string,
    collector_: string,
    juniorMemberlist_: string,
    seniorMemberlist_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      shelf_,
      pile_,
      nftFeed_,
      title_,
      distributor_,
      collector_,
      juniorMemberlist_,
      seniorMemberlist_,
      overrides || {}
    );
  }
  attach(address: string): AdminUser {
    return super.attach(address) as AdminUser;
  }
  connect(signer: Signer): AdminUser__factory {
    return super.connect(signer) as AdminUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminUserInterface {
    return new utils.Interface(_abi) as AdminUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminUser {
    return new Contract(address, _abi, signerOrProvider) as AdminUser;
  }
}
