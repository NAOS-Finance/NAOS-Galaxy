/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestRoot, TestRootInterface } from "../TestRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "deployUsr",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: true,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "foo",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "bar",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "fax",
        type: "bytes",
      },
    ],
    name: "LogNote",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "borrowerDeployer",
    outputs: [
      {
        internalType: "contract BorrowerDeployerLike",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "denyBorrowerAdmin",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "denyContract",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "deploy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "deployUsr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "deployed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "usr",
        type: "address",
      },
    ],
    name: "file",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lenderDeployer",
    outputs: [
      {
        internalType: "contract LenderDeployerLike",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "lender_",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ward_",
        type: "address",
      },
    ],
    name: "prepare",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "relyBorrowerAdmin",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "relyContract",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "relyLenderAdmin",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "withdrawAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161153d38038061153d8339818101604052602081101561003357600080fd5b5051600380546001600160a01b0319166001600160a01b039092169190911790556114da806100636000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b7b34d11116100a2578063d4e8be8311610071578063d4e8be83146102bf578063edc776ad146102eb578063f905c15a146102f3578063fe0ac3e71461030f578063fe7a33ad1461033d5761010b565b8063b7b34d111461023c578063be35761614610244578063bf353dbb14610261578063c718daa2146102995761010b565b806365fae35e116100de57806365fae35e146101c2578063775c300c146101e857806388b0e3c4146101f05780639c52a7f1146102165761010b565b80631581b6001461011057806332b8c84a14610134578063373e73f81461015c5780636455cc901461018a575b600080fd5b610118610345565b604080516001600160a01b039092168252519081900360200190f35b61015a6004803603602081101561014a57600080fd5b50356001600160a01b0316610354565b005b61015a6004803603604081101561017257600080fd5b506001600160a01b038135811691602001351661042d565b61015a600480360360608110156101a057600080fd5b506001600160a01b0381358116916020810135821691604090910135166104bd565b61015a600480360360208110156101d857600080fd5b50356001600160a01b031661051e565b61015a6105bf565b61015a6004803603602081101561020657600080fd5b50356001600160a01b0316610bb2565b61015a6004803603602081101561022c57600080fd5b50356001600160a01b0316610d3b565b610118610ddb565b61015a6004803603602081101561025a57600080fd5b5035610dea565b6102876004803603602081101561027757600080fd5b50356001600160a01b031661118c565b60408051918252519081900360200190f35b61015a600480360360208110156102af57600080fd5b50356001600160a01b031661119e565b61015a600480360360408110156102d557600080fd5b50803590602001356001600160a01b03166112f5565b6101186113de565b6102fb6113ed565b604080519115158252519081900360200190f35b61015a6004803603604081101561032557600080fd5b506001600160a01b03813581169160200135166113fd565b610118611471565b6004546001600160a01b031681565b3360009081526020819052604090205460011461037057600080fd5b600254604080516329d64c8960e11b815290516001600160a01b03909216916103ed9183916353ac991291600480820192602092909190829003018186803b1580156103bb57600080fd5b505afa1580156103cf573d6000803e3d6000fd5b505050506040513d60208110156103e557600080fd5b50518361042d565b610429816001600160a01b031663a6c019606040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b5050565b3360009081526020819052604090205460011461044957600080fd5b816001600160a01b03166365fae35e826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156104a157600080fd5b505af11580156104b5573d6000803e3d6000fd5b505050505050565b6003546001600160a01b031633146104d457600080fd5b600180546001600160a01b03199081166001600160a01b03948516178255600280548216958516959095179094559116600090815260208190526040902055600380549091169055565b3360009081526020819052604090205460011461053a57600080fd5b6001600160a01b03811660009081526020818152604080832060019055805134808252928101828152369282018390526004359460243594938593879333936001600160e01b0319813516938893919290919060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a450505050565b6001546001600160a01b0316158015906105e357506002546001600160a01b031615155b80156105f95750600254600160a01b900460ff16155b61060257600080fd5b6002805460ff60a01b1916600160a01b17908190556040805163669949ef60e11b815290516000926001600160a01b03169163cd3293de91600480830192602092919082900301818787803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b505050506040513d602081101561068457600080fd5b5051600154604080516311e6e71b60e21b815290519293506000926001600160a01b039092169163479b9c6c9160048082019260209290919082900301818787803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d60208110156106fc57600080fd5b50516001546040805163913e77ad60e01b815290519293506001600160a01b039091169163913e77ad916004808201926020929091908290030181600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b505160408051639adc339d60e01b81526a3234b9ba3934b13aba37b960a91b60048201526001600160a01b03858116602483015291519190921691639adc339d91604480830192600092919082900301818387803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b031663479b9c6c6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083b57600080fd5b505af115801561084f573d6000803e3d6000fd5b505050506040513d602081101561086557600080fd5b505160408051639adc339d60e01b8152653632b73232b960d11b60048201526001600160a01b03858116602483015291519190921691639adc339d91604480830192600092919082900301818387803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b50505050600160009054906101000a90046001600160a01b03166001600160a01b031663479b9c6c6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050506040513d602081101561095357600080fd5b505160408051639adc339d60e01b81526a3234b9ba3934b13aba37b960a91b60048201526001600160a01b03858116602483015291519190921691639adc339d91604480830192600092919082900301818387803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050506000600160009054906101000a90046001600160a01b03166001600160a01b03166337a7b7d86040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a1e57600080fd5b505af1158015610a32573d6000803e3d6000fd5b505050506040513d6020811015610a4857600080fd5b505160408051639adc339d60e01b81526439b432b63360d91b60048201526001600160a01b038581166024830152915192935090851691639adc339d9160448082019260009290919082900301818387803b158015610aa657600080fd5b505af1158015610aba573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316631821d6966040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b0e57600080fd5b505af1158015610b22573d6000803e3d6000fd5b505050506040513d6020811015610b3857600080fd5b505160408051639adc339d60e01b8152661b985d9199595960ca1b60048201526001600160a01b03848116602483015291519190921691639adc339d91604480830192600092919082900301818387803b158015610b9557600080fd5b505af1158015610ba9573d6000803e3d6000fd5b50505050505050565b33600090815260208190526040902054600114610bce57600080fd5b6001546040805163129e754360e21b815290516001600160a01b0390921691610c4b918391634a79d50c91600480820192602092909190829003018186803b158015610c1957600080fd5b505afa158015610c2d573d6000803e3d6000fd5b505050506040513d6020811015610c4357600080fd5b5051836113fd565b610c87816001600160a01b03166337a7b7d86040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1957600080fd5b610cc3816001600160a01b031663479b9c6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1957600080fd5b610cff816001600160a01b03166362f6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1957600080fd5b610429816001600160a01b031663913e77ad6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1957600080fd5b33600090815260208190526040902054600114610d5757600080fd5b6001600160a01b038116600090815260208181526040808320839055805134808252928101828152369282018390526004359460243594938593879333936001600160e01b0319813516938893919290919060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a450505050565b6002546001600160a01b031681565b33600090815260208190526040902054600114610e0657600080fd5b60025460408051630c10eb4b60e11b815290516000926001600160a01b031691631821d69691600480830192602092919082900301818787803b158015610e4c57600080fd5b505af1158015610e60573d6000803e3d6000fd5b505050506040513d6020811015610e7657600080fd5b505160408051637f2aa79f60e01b815290516001600160a01b0390921691637f2aa79f916004808201926020929091908290030181600087803b158015610ebc57600080fd5b505af1158015610ed0573d6000803e3d6000fd5b505050506040513d6020811015610ee657600080fd5b5051905080610f3c576040805162461bcd60e51b815260206004820152601860248201527f7a65726f20666565206c65667420696e20726573657276650000000000000000604482015290519081900360640190fd5b81811015801561102a57506002546040805163669949ef60e11b8152905184926001600160a01b03169163cd3293de9160048083019260209291908290030181600087803b158015610f8d57600080fd5b505af1158015610fa1573d6000803e3d6000fd5b505050506040513d6020811015610fb757600080fd5b50516040805163ad7a672f60e01b815290516001600160a01b039092169163ad7a672f91600480820192602092909190829003018186803b158015610ffb57600080fd5b505afa15801561100f573d6000803e3d6000fd5b505050506040513d602081101561102557600080fd5b505110155b6110655760405162461bcd60e51b81526004018080602001828103825260258152602001806114816025913960400191505060405180910390fd5b6004546001600160a01b03166110ba576040805162461bcd60e51b81526020600482015260156024820152747a65726f207769746864726177206164647265737360581b604482015290519081900360640190fd5b600260009054906101000a90046001600160a01b03166001600160a01b031663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b505050506040513d602081101561113457600080fd5b505160048054604080516314530cb760e01b81526001600160a01b039283169381019390935260248301869052519216916314530cb79160448082019260009290919082900301818387803b1580156104a157600080fd5b60006020819052908152604090205481565b336000908152602081905260409020546001146111ba57600080fd5b6001546040805163129e754360e21b815290516001600160a01b0390921691611205918391634a79d50c91600480820192602092909190829003018186803b1580156103bb57600080fd5b611241816001600160a01b031663479b9c6c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b61127d816001600160a01b03166362f6b10f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b6112b9816001600160a01b03166337a7b7d86040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b610429816001600160a01b031663913e77ad6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b3360009081526020819052604090205460011461131157600080fd5b816e77697468647261774164647265737360881b141561139e576001600160a01b03811661137e576040805162461bcd60e51b81526020600482015260156024820152747a65726f207769746864726177206164647265737360581b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b038316179055610429565b6040805162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e2d7661726961626c6560801b604482015290519081900360640190fd5b6003546001600160a01b031681565b600254600160a01b900460ff1681565b3360009081526020819052604090205460011461141957600080fd5b816001600160a01b0316639c52a7f1826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156104a157600080fd5b6001546001600160a01b03168156fe696e73756666696369656e742063757272656e6379206c65667420696e2072657365727665a265627a7a723158207892cdb936c4f3222df332f4bbfbeb31f308e5268d0ce6e5b4be4298e90bf5b464736f6c634300050f0032";

export class TestRoot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    deployUsr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRoot> {
    return super.deploy(deployUsr, overrides || {}) as Promise<TestRoot>;
  }
  getDeployTransaction(
    deployUsr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(deployUsr, overrides || {});
  }
  attach(address: string): TestRoot {
    return super.attach(address) as TestRoot;
  }
  connect(signer: Signer): TestRoot__factory {
    return super.connect(signer) as TestRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRootInterface {
    return new utils.Interface(_abi) as TestRootInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRoot {
    return new Contract(address, _abi, signerOrProvider) as TestRoot;
  }
}
