/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSNote__factory>;
    getContractFactory(
      name: "DSTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTest__factory>;
    getContractFactory(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "Interest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Interest__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Title",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Title__factory>;
    getContractFactory(
      name: "TitleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleLike__factory>;
    getContractFactory(
      name: "TitleOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleOwned__factory>;
    getContractFactory(
      name: "Collector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collector__factory>;
    getContractFactory(
      name: "DistributorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DistributorLike__factory>;
    getContractFactory(
      name: "NFTLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTLike__factory>;
    getContractFactory(
      name: "PileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileLike__factory>;
    getContractFactory(
      name: "ShelfLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfLike__factory>;
    getContractFactory(
      name: "ThresholdRegistryLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThresholdRegistryLike__factory>;
    getContractFactory(
      name: "CollectorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectorTest__factory>;
    getContractFactory(
      name: "AuthLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthLike__factory>;
    getContractFactory(
      name: "BorrowerDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BorrowerDeployer__factory>;
    getContractFactory(
      name: "DependLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DependLike__factory>;
    getContractFactory(
      name: "FeedFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedFabLike__factory>;
    getContractFactory(
      name: "FileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FileLike__factory>;
    getContractFactory(
      name: "NFTFeedLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTFeedLike__factory>;
    getContractFactory(
      name: "CollectorFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectorFab__factory>;
    getContractFactory(
      name: "CollectorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectorFabLike__factory>;
    getContractFactory(
      name: "NAVFeedFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVFeedFabLike__factory>;
    getContractFactory(
      name: "PileFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileFabLike__factory>;
    getContractFactory(
      name: "ShelfFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfFabLike__factory>;
    getContractFactory(
      name: "TitleFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleFabLike__factory>;
    getContractFactory(
      name: "NAVFeedFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVFeedFab__factory>;
    getContractFactory(
      name: "NFTFeedFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTFeedFab__factory>;
    getContractFactory(
      name: "NFTFeedFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTFeedFabLike__factory>;
    getContractFactory(
      name: "PileFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileFab__factory>;
    getContractFactory(
      name: "ShelfFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfFab__factory>;
    getContractFactory(
      name: "TitleFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleFab__factory>;
    getContractFactory(
      name: "Buckets",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Buckets__factory>;
    getContractFactory(
      name: "NAVFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVFeed__factory>;
    getContractFactory(
      name: "BaseNFTFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseNFTFeed__factory>;
    getContractFactory(
      name: "PileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileLike__factory>;
    getContractFactory(
      name: "ShelfLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfLike__factory>;
    getContractFactory(
      name: "BucketList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BucketList__factory>;
    getContractFactory(
      name: "BucketTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BucketTest__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "NAVTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVTest__factory>;
    getContractFactory(
      name: "NFTFeedTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTFeedTest__factory>;
    getContractFactory(
      name: "Pile",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pile__factory>;
    getContractFactory(
      name: "CeilingLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CeilingLike__factory>;
    getContractFactory(
      name: "DistributorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DistributorLike__factory>;
    getContractFactory(
      name: "NFTLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTLike__factory>;
    getContractFactory(
      name: "PileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileLike__factory>;
    getContractFactory(
      name: "Shelf",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Shelf__factory>;
    getContractFactory(
      name: "SubscriberLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubscriberLike__factory>;
    getContractFactory(
      name: "TitleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleLike__factory>;
    getContractFactory(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenLike__factory>;
    getContractFactory(
      name: "DeployerTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeployerTest__factory>;
    getContractFactory(
      name: "CeilingMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CeilingMock__factory>;
    getContractFactory(
      name: "DistributorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DistributorMock__factory>;
    getContractFactory(
      name: "NFTMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTMock__factory>;
    getContractFactory(
      name: "PileMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileMock__factory>;
    getContractFactory(
      name: "ShelfMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfMock__factory>;
    getContractFactory(
      name: "SubscriberMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubscriberMock__factory>;
    getContractFactory(
      name: "TitleMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleMock__factory>;
    getContractFactory(
      name: "TokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenMock__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "PileTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileTest__factory>;
    getContractFactory(
      name: "ShelfTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfTest__factory>;
    getContractFactory(
      name: "Assessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Assessor__factory>;
    getContractFactory(
      name: "NAVFeedLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVFeedLike__factory>;
    getContractFactory(
      name: "ReserveLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLike__factory>;
    getContractFactory(
      name: "TrancheLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheLike__factory>;
    getContractFactory(
      name: "AssessorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorLike__factory>;
    getContractFactory(
      name: "EpochCoordinator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochCoordinator__factory>;
    getContractFactory(
      name: "EpochTrancheLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochTrancheLike__factory>;
    getContractFactory(
      name: "ReserveLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLike__factory>;
    getContractFactory(
      name: "AuthLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthLike__factory>;
    getContractFactory(
      name: "DependLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DependLike__factory>;
    getContractFactory(
      name: "FileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FileLike__factory>;
    getContractFactory(
      name: "LenderDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LenderDeployer__factory>;
    getContractFactory(
      name: "MemberlistLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistLike__factory>;
    getContractFactory(
      name: "AssessorFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorFab__factory>;
    getContractFactory(
      name: "AssessorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorFabLike__factory>;
    getContractFactory(
      name: "CoordinatorFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorFab__factory>;
    getContractFactory(
      name: "CoordinatorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorFabLike__factory>;
    getContractFactory(
      name: "AssessorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorFabLike__factory>;
    getContractFactory(
      name: "CoordinatorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorFabLike__factory>;
    getContractFactory(
      name: "MemberlistFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistFabLike__factory>;
    getContractFactory(
      name: "OperatorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFabLike__factory>;
    getContractFactory(
      name: "ReserveFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFabLike__factory>;
    getContractFactory(
      name: "RestrictedTokenFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedTokenFabLike__factory>;
    getContractFactory(
      name: "TrancheFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheFabLike__factory>;
    getContractFactory(
      name: "MemberlistFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistFab__factory>;
    getContractFactory(
      name: "MemberlistFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistFabLike__factory>;
    getContractFactory(
      name: "OperatorFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFab__factory>;
    getContractFactory(
      name: "OperatorFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorFabLike__factory>;
    getContractFactory(
      name: "ReserveFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFab__factory>;
    getContractFactory(
      name: "ReserveFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveFabLike__factory>;
    getContractFactory(
      name: "RestrictedTokenFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedTokenFab__factory>;
    getContractFactory(
      name: "RestrictedTokenFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedTokenFabLike__factory>;
    getContractFactory(
      name: "TrancheFab",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheFab__factory>;
    getContractFactory(
      name: "TrancheFabLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheFabLike__factory>;
    getContractFactory(
      name: "DaiPermitLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiPermitLike__factory>;
    getContractFactory(
      name: "EIP2612PermitLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP2612PermitLike__factory>;
    getContractFactory(
      name: "Operator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Operator__factory>;
    getContractFactory(
      name: "RestrictedTokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedTokenLike__factory>;
    getContractFactory(
      name: "TrancheLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheLike__factory>;
    getContractFactory(
      name: "AssessorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorLike__factory>;
    getContractFactory(
      name: "ERC20Like",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Like__factory>;
    getContractFactory(
      name: "Reserve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reserve__factory>;
    getContractFactory(
      name: "ShelfLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfLike__factory>;
    getContractFactory(
      name: "AssessorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorTest__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "CoordinatorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorLike__factory>;
    getContractFactory(
      name: "CoordinatorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorTest__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "CoordinatorCloseEpochTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorCloseEpochTest__factory>;
    getContractFactory(
      name: "CoordinatorExecuteEpochTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorExecuteEpochTest__factory>;
    getContractFactory(
      name: "CoordinatorImprovementScoreTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorImprovementScoreTest__factory>;
    getContractFactory(
      name: "CoordinatorSubmitEpochTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorSubmitEpochTest__factory>;
    getContractFactory(
      name: "CoordinatorValidateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoordinatorValidateTest__factory>;
    getContractFactory(
      name: "MemberlistTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistTest__factory>;
    getContractFactory(
      name: "AssessorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorMock__factory>;
    getContractFactory(
      name: "DistributorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DistributorMock__factory>;
    getContractFactory(
      name: "EpochTickerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochTickerMock__factory>;
    getContractFactory(
      name: "NAVFeedMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NAVFeedMock__factory>;
    getContractFactory(
      name: "PoolMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolMock__factory>;
    getContractFactory(
      name: "CurrencyLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurrencyLike__factory>;
    getContractFactory(
      name: "ReserveMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveMock__factory>;
    getContractFactory(
      name: "TrancheMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheMock__factory>;
    getContractFactory(
      name: "OperatorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorTest__factory>;
    getContractFactory(
      name: "ReserveTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveTest__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "RestrictedTokenTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedTokenTest__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "TrancheTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheTest__factory>;
    getContractFactory(
      name: "User",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.User__factory>;
    getContractFactory(
      name: "Memberlist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Memberlist__factory>;
    getContractFactory(
      name: "MemberlistLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistLike__factory>;
    getContractFactory(
      name: "RestrictedToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedToken__factory>;
    getContractFactory(
      name: "EpochTickerLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochTickerLike__factory>;
    getContractFactory(
      name: "ERC20Like",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Like__factory>;
    getContractFactory(
      name: "ReserveLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLike__factory>;
    getContractFactory(
      name: "Tranche",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tranche__factory>;
    getContractFactory(
      name: "AssessorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssessorLike__factory>;
    getContractFactory(
      name: "AuthLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthLike__factory>;
    getContractFactory(
      name: "BorrowerDeployerLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BorrowerDeployerLike__factory>;
    getContractFactory(
      name: "DependLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DependLike__factory>;
    getContractFactory(
      name: "GalaxyRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GalaxyRoot__factory>;
    getContractFactory(
      name: "LenderDeployerLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LenderDeployerLike__factory>;
    getContractFactory(
      name: "ReserveLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReserveLike__factory>;
    getContractFactory(
      name: "Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mock__factory>;
    getContractFactory(
      name: "Distributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Distributor__factory>;
    getContractFactory(
      name: "DistTokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DistTokenLike__factory>;
    getContractFactory(
      name: "DShelfLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DShelfLike__factory>;
    getContractFactory(
      name: "SimpleToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleToken__factory>;
    getContractFactory(
      name: "BaseSystemTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSystemTest__factory>;
    getContractFactory(
      name: "PrincipalBorrowTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrincipalBorrowTest__factory>;
    getContractFactory(
      name: "CloseTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CloseTest__factory>;
    getContractFactory(
      name: "IssueTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IssueTest__factory>;
    getContractFactory(
      name: "LockTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LockTest__factory>;
    getContractFactory(
      name: "PrincipalRepayTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrincipalRepayTest__factory>;
    getContractFactory(
      name: "UnlockTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnlockTest__factory>;
    getContractFactory(
      name: "WithdrawTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WithdrawTest__factory>;
    getContractFactory(
      name: "CollectTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectTest__factory>;
    getContractFactory(
      name: "CollectorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectorLike__factory>;
    getContractFactory(
      name: "ERC20Like",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Like__factory>;
    getContractFactory(
      name: "Hevm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hevm__factory>;
    getContractFactory(
      name: "MemberlistLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemberlistLike__factory>;
    getContractFactory(
      name: "NFTFeedLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTFeedLike__factory>;
    getContractFactory(
      name: "PileLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PileLike__factory>;
    getContractFactory(
      name: "ShelfLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShelfLike__factory>;
    getContractFactory(
      name: "TDistributorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDistributorLike__factory>;
    getContractFactory(
      name: "ThresholdLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThresholdLike__factory>;
    getContractFactory(
      name: "TitleLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TitleLike__factory>;
    getContractFactory(
      name: "TokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenLike__factory>;
    getContractFactory(
      name: "TrancheLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TrancheLike__factory>;
    getContractFactory(
      name: "LenderIntegrationTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LenderIntegrationTest__factory>;
    getContractFactory(
      name: "LenderSystemTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LenderSystemTest__factory>;
    getContractFactory(
      name: "TestRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestRoot__factory>;
    getContractFactory(
      name: "ScenarioTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ScenarioTest__factory>;
    getContractFactory(
      name: "TestSetup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSetup__factory>;
    getContractFactory(
      name: "AdminOperatorLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminOperatorLike__factory>;
    getContractFactory(
      name: "AdminUser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUser__factory>;
    getContractFactory(
      name: "Borrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Borrower__factory>;
    getContractFactory(
      name: "Investor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Investor__factory>;
    getContractFactory(
      name: "InvestorOperator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InvestorOperator__factory>;
    getContractFactory(
      name: "Keeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Keeper__factory>;

    getContractAt(
      name: "DSNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSNote>;
    getContractAt(
      name: "DSTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTest>;
    getContractAt(
      name: "Auth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Auth>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "Interest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Interest>;
    getContractAt(
      name: "Math",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Title",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Title>;
    getContractAt(
      name: "TitleLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleLike>;
    getContractAt(
      name: "TitleOwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleOwned>;
    getContractAt(
      name: "Collector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Collector>;
    getContractAt(
      name: "DistributorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DistributorLike>;
    getContractAt(
      name: "NFTLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTLike>;
    getContractAt(
      name: "PileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileLike>;
    getContractAt(
      name: "ShelfLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfLike>;
    getContractAt(
      name: "ThresholdRegistryLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ThresholdRegistryLike>;
    getContractAt(
      name: "CollectorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectorTest>;
    getContractAt(
      name: "AuthLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthLike>;
    getContractAt(
      name: "BorrowerDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BorrowerDeployer>;
    getContractAt(
      name: "DependLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DependLike>;
    getContractAt(
      name: "FeedFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedFabLike>;
    getContractAt(
      name: "FileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FileLike>;
    getContractAt(
      name: "NFTFeedLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTFeedLike>;
    getContractAt(
      name: "CollectorFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectorFab>;
    getContractAt(
      name: "CollectorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectorFabLike>;
    getContractAt(
      name: "NAVFeedFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVFeedFabLike>;
    getContractAt(
      name: "PileFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileFabLike>;
    getContractAt(
      name: "ShelfFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfFabLike>;
    getContractAt(
      name: "TitleFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleFabLike>;
    getContractAt(
      name: "NAVFeedFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVFeedFab>;
    getContractAt(
      name: "NFTFeedFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTFeedFab>;
    getContractAt(
      name: "NFTFeedFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTFeedFabLike>;
    getContractAt(
      name: "PileFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileFab>;
    getContractAt(
      name: "ShelfFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfFab>;
    getContractAt(
      name: "TitleFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleFab>;
    getContractAt(
      name: "Buckets",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Buckets>;
    getContractAt(
      name: "NAVFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVFeed>;
    getContractAt(
      name: "BaseNFTFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseNFTFeed>;
    getContractAt(
      name: "PileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileLike>;
    getContractAt(
      name: "ShelfLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfLike>;
    getContractAt(
      name: "BucketList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BucketList>;
    getContractAt(
      name: "BucketTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BucketTest>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "NAVTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVTest>;
    getContractAt(
      name: "NFTFeedTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTFeedTest>;
    getContractAt(
      name: "Pile",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pile>;
    getContractAt(
      name: "CeilingLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CeilingLike>;
    getContractAt(
      name: "DistributorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DistributorLike>;
    getContractAt(
      name: "NFTLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTLike>;
    getContractAt(
      name: "PileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileLike>;
    getContractAt(
      name: "Shelf",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Shelf>;
    getContractAt(
      name: "SubscriberLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SubscriberLike>;
    getContractAt(
      name: "TitleLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleLike>;
    getContractAt(
      name: "TokenLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenLike>;
    getContractAt(
      name: "DeployerTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DeployerTest>;
    getContractAt(
      name: "CeilingMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CeilingMock>;
    getContractAt(
      name: "DistributorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DistributorMock>;
    getContractAt(
      name: "NFTMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTMock>;
    getContractAt(
      name: "PileMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileMock>;
    getContractAt(
      name: "ShelfMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfMock>;
    getContractAt(
      name: "SubscriberMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SubscriberMock>;
    getContractAt(
      name: "TitleMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleMock>;
    getContractAt(
      name: "TokenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenMock>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "PileTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileTest>;
    getContractAt(
      name: "ShelfTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfTest>;
    getContractAt(
      name: "Assessor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Assessor>;
    getContractAt(
      name: "NAVFeedLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVFeedLike>;
    getContractAt(
      name: "ReserveLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveLike>;
    getContractAt(
      name: "TrancheLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheLike>;
    getContractAt(
      name: "AssessorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorLike>;
    getContractAt(
      name: "EpochCoordinator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochCoordinator>;
    getContractAt(
      name: "EpochTrancheLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochTrancheLike>;
    getContractAt(
      name: "ReserveLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveLike>;
    getContractAt(
      name: "AuthLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthLike>;
    getContractAt(
      name: "DependLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DependLike>;
    getContractAt(
      name: "FileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FileLike>;
    getContractAt(
      name: "LenderDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LenderDeployer>;
    getContractAt(
      name: "MemberlistLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistLike>;
    getContractAt(
      name: "AssessorFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorFab>;
    getContractAt(
      name: "AssessorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorFabLike>;
    getContractAt(
      name: "CoordinatorFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorFab>;
    getContractAt(
      name: "CoordinatorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorFabLike>;
    getContractAt(
      name: "AssessorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorFabLike>;
    getContractAt(
      name: "CoordinatorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorFabLike>;
    getContractAt(
      name: "MemberlistFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistFabLike>;
    getContractAt(
      name: "OperatorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFabLike>;
    getContractAt(
      name: "ReserveFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveFabLike>;
    getContractAt(
      name: "RestrictedTokenFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedTokenFabLike>;
    getContractAt(
      name: "TrancheFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheFabLike>;
    getContractAt(
      name: "MemberlistFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistFab>;
    getContractAt(
      name: "MemberlistFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistFabLike>;
    getContractAt(
      name: "OperatorFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFab>;
    getContractAt(
      name: "OperatorFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorFabLike>;
    getContractAt(
      name: "ReserveFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveFab>;
    getContractAt(
      name: "ReserveFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveFabLike>;
    getContractAt(
      name: "RestrictedTokenFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedTokenFab>;
    getContractAt(
      name: "RestrictedTokenFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedTokenFabLike>;
    getContractAt(
      name: "TrancheFab",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheFab>;
    getContractAt(
      name: "TrancheFabLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheFabLike>;
    getContractAt(
      name: "DaiPermitLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiPermitLike>;
    getContractAt(
      name: "EIP2612PermitLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP2612PermitLike>;
    getContractAt(
      name: "Operator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Operator>;
    getContractAt(
      name: "RestrictedTokenLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedTokenLike>;
    getContractAt(
      name: "TrancheLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheLike>;
    getContractAt(
      name: "AssessorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorLike>;
    getContractAt(
      name: "ERC20Like",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Like>;
    getContractAt(
      name: "Reserve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reserve>;
    getContractAt(
      name: "ShelfLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfLike>;
    getContractAt(
      name: "AssessorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorTest>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "CoordinatorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorLike>;
    getContractAt(
      name: "CoordinatorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorTest>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "CoordinatorCloseEpochTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorCloseEpochTest>;
    getContractAt(
      name: "CoordinatorExecuteEpochTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorExecuteEpochTest>;
    getContractAt(
      name: "CoordinatorImprovementScoreTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorImprovementScoreTest>;
    getContractAt(
      name: "CoordinatorSubmitEpochTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorSubmitEpochTest>;
    getContractAt(
      name: "CoordinatorValidateTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoordinatorValidateTest>;
    getContractAt(
      name: "MemberlistTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistTest>;
    getContractAt(
      name: "AssessorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorMock>;
    getContractAt(
      name: "DistributorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DistributorMock>;
    getContractAt(
      name: "EpochTickerMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochTickerMock>;
    getContractAt(
      name: "NAVFeedMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NAVFeedMock>;
    getContractAt(
      name: "PoolMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolMock>;
    getContractAt(
      name: "CurrencyLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurrencyLike>;
    getContractAt(
      name: "ReserveMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveMock>;
    getContractAt(
      name: "TrancheMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheMock>;
    getContractAt(
      name: "OperatorTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorTest>;
    getContractAt(
      name: "ReserveTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveTest>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "RestrictedTokenTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedTokenTest>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "TrancheTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheTest>;
    getContractAt(
      name: "User",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.User>;
    getContractAt(
      name: "Memberlist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Memberlist>;
    getContractAt(
      name: "MemberlistLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistLike>;
    getContractAt(
      name: "RestrictedToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedToken>;
    getContractAt(
      name: "EpochTickerLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochTickerLike>;
    getContractAt(
      name: "ERC20Like",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Like>;
    getContractAt(
      name: "ReserveLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveLike>;
    getContractAt(
      name: "Tranche",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Tranche>;
    getContractAt(
      name: "AssessorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssessorLike>;
    getContractAt(
      name: "AuthLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthLike>;
    getContractAt(
      name: "BorrowerDeployerLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BorrowerDeployerLike>;
    getContractAt(
      name: "DependLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DependLike>;
    getContractAt(
      name: "GalaxyRoot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GalaxyRoot>;
    getContractAt(
      name: "LenderDeployerLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LenderDeployerLike>;
    getContractAt(
      name: "ReserveLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReserveLike>;
    getContractAt(
      name: "Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mock>;
    getContractAt(
      name: "Distributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Distributor>;
    getContractAt(
      name: "DistTokenLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DistTokenLike>;
    getContractAt(
      name: "DShelfLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DShelfLike>;
    getContractAt(
      name: "SimpleToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleToken>;
    getContractAt(
      name: "BaseSystemTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSystemTest>;
    getContractAt(
      name: "PrincipalBorrowTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrincipalBorrowTest>;
    getContractAt(
      name: "CloseTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CloseTest>;
    getContractAt(
      name: "IssueTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IssueTest>;
    getContractAt(
      name: "LockTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LockTest>;
    getContractAt(
      name: "PrincipalRepayTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrincipalRepayTest>;
    getContractAt(
      name: "UnlockTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnlockTest>;
    getContractAt(
      name: "WithdrawTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WithdrawTest>;
    getContractAt(
      name: "CollectTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectTest>;
    getContractAt(
      name: "CollectorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectorLike>;
    getContractAt(
      name: "ERC20Like",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Like>;
    getContractAt(
      name: "Hevm",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hevm>;
    getContractAt(
      name: "MemberlistLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MemberlistLike>;
    getContractAt(
      name: "NFTFeedLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTFeedLike>;
    getContractAt(
      name: "PileLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PileLike>;
    getContractAt(
      name: "ShelfLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShelfLike>;
    getContractAt(
      name: "TDistributorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TDistributorLike>;
    getContractAt(
      name: "ThresholdLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ThresholdLike>;
    getContractAt(
      name: "TitleLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TitleLike>;
    getContractAt(
      name: "TokenLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenLike>;
    getContractAt(
      name: "TrancheLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TrancheLike>;
    getContractAt(
      name: "LenderIntegrationTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LenderIntegrationTest>;
    getContractAt(
      name: "LenderSystemTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LenderSystemTest>;
    getContractAt(
      name: "TestRoot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestRoot>;
    getContractAt(
      name: "ScenarioTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ScenarioTest>;
    getContractAt(
      name: "TestSetup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSetup>;
    getContractAt(
      name: "AdminOperatorLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminOperatorLike>;
    getContractAt(
      name: "AdminUser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminUser>;
    getContractAt(
      name: "Borrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Borrower>;
    getContractAt(
      name: "Investor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Investor>;
    getContractAt(
      name: "InvestorOperator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InvestorOperator>;
    getContractAt(
      name: "Keeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Keeper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
